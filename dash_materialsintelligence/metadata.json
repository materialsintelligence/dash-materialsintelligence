{
  "src/components/Annotatable.react.js": {
    "description": "Annotatable is a clickable and selectable\nSpan component used to annotate a list of strings.",
    "displayName": "Annotatable",
    "methods": [
      {
        "name": "handleHover",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "annotate",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Initial className"
      },
      "currentLabel": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The selected label that will be assigned to the object annotation when it is clicked"
      },
      "annotation": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "string"
              }
            }
          ]
        },
        "required": false,
        "description": "The annotation of the object that changes when the object is clicked"
      },
      "passiveAnnotation": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "string"
              }
            }
          ]
        },
        "required": false,
        "description": "Annotation that will not change and is just for styling / highlighting"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value is the text"
      }
    }
  },
  "src/components/AnnotationContainer.react.js": {
    "description": "AnnotationContainer is a div containing Annotatable objects",
    "displayName": "AnnotationContainer",
    "methods": [
      {
        "name": "updateToken",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "rowIndex",
            "type": null
          },
          {
            "name": "index",
            "type": null
          },
          {
            "name": "id",
            "type": null
          },
          {
            "name": "newAnnotation",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "updateLabel",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "newLabelValue",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "tokens": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": {
                "start": {
                  "name": "number",
                  "required": true
                },
                "end": {
                  "name": "number",
                  "required": true
                },
                "text": {
                  "name": "string",
                  "required": true
                },
                "annotation": {
                  "name": "union",
                  "value": [
                    {
                      "name": "string"
                    },
                    {
                      "name": "arrayOf",
                      "value": {
                        "name": "string"
                      }
                    }
                  ],
                  "required": false
                },
                "pos": {
                  "name": "string",
                  "required": false
                },
                "id": {
                  "name": "string",
                  "required": false
                }
              }
            }
          }
        },
        "required": false,
        "description": "List of tokens used for the annotation"
      },
      "labels": {
        "type": {
          "name": "custom",
          "raw": "LabelsContainer.propTypes.labels"
        },
        "required": false,
        "description": "This goes in to create the labels"
      },
      "passiveLabels": {
        "type": {
          "name": "custom",
          "raw": "LabelsContainer.propTypes.labels"
        },
        "required": false,
        "description": "Already existing labels that should be passively highlighted"
      },
      "selectedValue": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Start indices opf tokens that are already identified/annotated"
      },
      "doi": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Unique doi for the container"
      }
    }
  },
  "src/components/DropdownCreatable.react.js": {
    "description": "ReactSelect extends react-select to work with dash",
    "displayName": "DropdownCreatable",
    "methods": [
      {
        "name": "updateState",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "element",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "options": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "select options"
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "the id"
      },
      "multi": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "multi-select or not"
      },
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "selected value"
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "placeholder"
      },
      "promptText": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "propmpt text when new option is created"
      }
    }
  },
  "src/components/LabelsContainer.react.js": {
    "description": "LabelsContainer is a div containing labels",
    "displayName": "LabelsContainer",
    "methods": [
      {
        "name": "updateLabel",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "changeEvent",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered."
      },
      "labels": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "value": {
                "name": "string",
                "required": true
              },
              "text": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": false,
        "description": "List of tokens used for the annotation"
      },
      "selectedValue": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Start indices opf tokens that are already identified/annotated"
      }
    }
  }
}